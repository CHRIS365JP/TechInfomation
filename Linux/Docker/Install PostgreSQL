ディレクトリ構造
|--Dockerfile
|--conf
|  |--my-postgresql-10.1.conf(shared_buffers=256MBに変更したもの)
|  |--postgresql-10.1.conf(オリジナルファイル、一旦docker runしてコピーしたもの)
|--data
|--01postgre.yml
|--work
|  |--init-user-db.sh(initdb時に行いたい処理を書く)


=============================================================================================================================
[host]$ docker run --name temp_postgre -d postgres:9.6 /bin/bash
[host]$ docker cp temp_postgre:/usr/share/postgresql/ ./temp/

[host]$ mkdir conf
[host]$ cp ./temp/postgresql.conf.sample ./conf/postgresql-9.6.conf

[host]$ cat ./conf/postgresql-9.6.conf |sed "s/^#shared_buffers = 32/shared_buffers = 256/g" > ./conf/my-postgresql-9.6.conf



# 起動
[host]$ docker-compose -f ./01postgre.yml up -d --build


=============================================================================================================================
Dockerfile
# postgres:9.6を使用
FROM postgres:9.6

# ロケール設定
RUN localedef -i ja_JP -c -f UTF-8 -A /usr/share/locale/locale.alias ja_JP.UTF-8
ENV LANG ja_JP.utf8

# 作成した設定ファイルを/etc/postgresql以下にコピー
COPY ./conf/postgresql-9.6.conf /etc/postgresql/postgresql.conf

# config_fileを/etc/postgresql/postgresql.confに指定
CMD ["-c", "config_file=/etc/postgresql/postgresql.conf"]


=============================================================================================================================
01postgre.yml
version: '3'
services:
  postgres-9.6:
    # Dockerfileでbuildしたものを実行
    # ロケールを変更するためにbuildを行う
    build:
      context: .

    environment:
      # ディレクトリの場所を指定
      PGDATA: /var/lib/postgresql/data/pgdata

      # この環境変数は、su権限を持つ指定されたユーザーと同じ名前のデータベースを作成
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

      # エンコーディングを指定しておく
      # initdbで指定できる内容はここで指定可能
      # https://www.postgresql.org/docs/10/static/app-initdb.html を参照。
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=ja_JP.UTF-8"

    # ttyをtrueに設定しておくと、コンテナが起動し続ける
    tty: true
    restart: always

    # loginユーザを指定
    user: root

    # 追加の初期化を行う場合は、/docker-entrypoint-initdb.dに* .sql、* .sql.gz、* .shスクリプトを1つ以上追加する。
    # エントリポイントがinitdbを呼び出してデフォルトのpostgresユーザとデータベースを作成した後、
    # * .sqlファイルが実行され、そのディレクトリにある* .shスクリプトがすべてソースされ、
    # サービスを開始する前にさらに初期化が行われる。
    volumes:
      - ./work:/docker-entrypoint-initdb.d/

      # pgdataをホストに置く。データ永続化。
      - ./data/:/var/lib/postgresql/data/

    stdin_open: true
    ports:
      - "15432:5432"
    #networks:
    #  - postgres-ha

#networks:
#  postgres-ha:
#    driver: bridge


=============================================================================================================================
eg:init-user-db.sh
-----------------------------------------------------------------------------------------------------------------------------
#!/bin/bash
set -e

# initdbでdockerというユーザとデータベースを作成する
psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
    CREATE USER docker;
    CREATE DATABASE docker;
    GRANT ALL PRIVILEGES ON DATABASE docker TO docker;
EOSQL
